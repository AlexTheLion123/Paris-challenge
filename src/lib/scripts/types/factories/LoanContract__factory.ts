/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LoanContract, LoanContractInterface } from "../LoanContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_loanID",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_decision",
        type: "bool",
      },
    ],
    name: "acceptOrDeny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "clientToLoansIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getClientToLoansIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getLoan",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "borrowerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountBorrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutstanding",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "enum LoanContract.LoanState",
            name: "loanState",
            type: "uint8",
          },
        ],
        internalType: "struct LoanContract.Loan",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequestedLoans",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToLoan",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "borrowerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBorrowed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutstanding",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "enum LoanContract.LoanState",
        name: "loanState",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_loanID",
        type: "uint256",
      },
    ],
    name: "paybackLoan",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "requestLoan",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "setLoanRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withDraw",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526005600355600060045534801561001a57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118828061006a6000396000f3fe6080604052600436106100e75760003560e01c806357d855e61161008a57806396437ebc1161005957806396437ebc14610334578063af640d0f1461035d578063d0e30db014610388578063d16ef22a14610392576100e7565b806357d855e61461024d578063614da4ac146102785780638796ba8c146102ba5780638d5d3429146102f7576100e7565b8063190f9f32116100c6578063190f9f321461017f5780632c4e722e146101a857806339fc9490146101d3578063504006ca14610210576100e7565b80626e1043146100ec5780630fdb1c101461012957806312065fe014610154575b600080fd5b3480156100f857600080fd5b50610113600480360381019061010e9190610fdf565b6103c2565b60405161012091906110d4565b60405180910390f35b34801561013557600080fd5b5061013e610459565b60405161014b9190611111565b60405180910390f35b34801561016057600080fd5b5061016961051c565b604051610176919061113b565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a191906111ae565b610524565b005b3480156101b457600080fd5b506101bd6106ac565b6040516101ca919061113b565b60405180910390f35b3480156101df57600080fd5b506101fa60048036038101906101f591906111ee565b6106b2565b604051610207919061113b565b60405180910390f35b34801561021c57600080fd5b506102376004803603810190610232919061122e565b6106e3565b604051610244919061135c565b60405180910390f35b34801561025957600080fd5b506102626107c9565b60405161026f91906110d4565b60405180910390f35b34801561028457600080fd5b5061029f600480360381019061029a919061122e565b610879565b6040516102b196959493929190611395565b60405180910390f35b3480156102c657600080fd5b506102e160048036038101906102dc919061122e565b6108e2565b6040516102ee919061113b565b60405180910390f35b34801561030357600080fd5b5061031e6004803603810190610319919061122e565b610906565b60405161032b9190611111565b60405180910390f35b34801561034057600080fd5b5061035b6004803603810190610356919061122e565b610b5e565b005b34801561036957600080fd5b50610372610c03565b60405161037f919061113b565b60405180910390f35b610390610c09565b005b6103ac60048036038101906103a7919061122e565b610c63565b6040516103b99190611111565b60405180910390f35b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561044d57602002820191906000526020600020905b815481526020019060010190808311610439575b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b457600080fd5b670de0b6b3a764000047116104c857600080fd5b60004790503073ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610513573d6000803e3d6000fd5b50600191505090565b600047905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461057c57600080fd5b60006005600084815260200190815260200160002090506001151582151514156106705760018160050160006101000a81548160ff021916908360038111156105c8576105c761126a565b5b02179055506106106040518060400160405280601181526020017f416d6f756e7420626f72726f7765643a200000000000000000000000000000008152508260020154610db1565b6106208160020154600354610e4d565b816003018190555061066b6040518060400160405280601481526020017f416d6f756e74206f75747374616e64696e673a200000000000000000000000008152508260030154610db1565b61069e565b60028160050160006101000a81548160ff021916908360038111156106985761069761126a565b5b02179055505b6106a783610e85565b505050565b60035481565b600160205281600052604060002081815481106106ce57600080fd5b90600052602060002001600091509150505481565b6106eb610f1e565b600560008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660038111156107ac576107ab61126a565b5b60038111156107be576107bd61126a565b5b815250509050919050565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082357600080fd5b600280548060200260200160405190810160405280929190818152602001828054801561086f57602002820191906000526020600020905b81548152602001906001019080831161085b575b5050505050905090565b60056020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b600281815481106108f257600080fd5b906000526020600020016000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098f90611453565b60405180910390fd5b600460008154809291906109ab906114a2565b91905055506040518060c0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160008152602001600354815260200160006003811115610a0857610a0761126a565b5b8152506005600060045481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836003811115610aba57610ab961126a565b5b0217905550905050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060045490806001815401808255809150506001900390600052602060002001600090919091909150556002600454908060018154018082558091505060019003906000526020600020016000909190919091505560019050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bb657600080fd5b60008111610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf090611537565b60405180910390fd5b8060038190555050565b60045481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c6157600080fd5b565b6000806005600084815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d04906115c9565b60405180910390fd5b8060030154341115610d54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4b9061165b565b60405180910390fd5b348160020154610d64919061167b565b8160030181905550600081600301541415610da75760038160050160006101000a81548160ff02191690836003811115610da157610da061126a565b5b02179055505b6001915050919050565b610e498282604051602401610dc7929190611737565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ef5565b5050565b600080826064610e5d9190611796565b905060008185610e6d9190611796565b90508085610e7b91906117c7565b9250505092915050565b60005b600280549050811015610ef1578160028281548110610eaa57610ea961181d565b5b90600052602060002001541415610ede5760028181548110610ecf57610ece61181d565b5b90600052602060002001600090555b8080610ee9906114a2565b915050610e88565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160006003811115610f7657610f7561126a565b5b81525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fac82610f81565b9050919050565b610fbc81610fa1565b8114610fc757600080fd5b50565b600081359050610fd981610fb3565b92915050565b600060208284031215610ff557610ff4610f7c565b5b600061100384828501610fca565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61104b81611038565b82525050565b600061105d8383611042565b60208301905092915050565b6000602082019050919050565b60006110818261100c565b61108b8185611017565b935061109683611028565b8060005b838110156110c75781516110ae8882611051565b97506110b983611069565b92505060018101905061109a565b5085935050505092915050565b600060208201905081810360008301526110ee8184611076565b905092915050565b60008115159050919050565b61110b816110f6565b82525050565b60006020820190506111266000830184611102565b92915050565b61113581611038565b82525050565b6000602082019050611150600083018461112c565b92915050565b61115f81611038565b811461116a57600080fd5b50565b60008135905061117c81611156565b92915050565b61118b816110f6565b811461119657600080fd5b50565b6000813590506111a881611182565b92915050565b600080604083850312156111c5576111c4610f7c565b5b60006111d38582860161116d565b92505060206111e485828601611199565b9150509250929050565b6000806040838503121561120557611204610f7c565b5b600061121385828601610fca565b92505060206112248582860161116d565b9150509250929050565b60006020828403121561124457611243610f7c565b5b60006112528482850161116d565b91505092915050565b61126481610fa1565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106112aa576112a961126a565b5b50565b60008190506112bb82611299565b919050565b60006112cb826112ad565b9050919050565b6112db816112c0565b82525050565b60c0820160008201516112f76000850182611042565b50602082015161130a602085018261125b565b50604082015161131d6040850182611042565b5060608201516113306060850182611042565b5060808201516113436080850182611042565b5060a082015161135660a08501826112d2565b50505050565b600060c08201905061137160008301846112e1565b92915050565b61138081610fa1565b82525050565b61138f816112c0565b82525050565b600060c0820190506113aa600083018961112c565b6113b76020830188611377565b6113c4604083018761112c565b6113d1606083018661112c565b6113de608083018561112c565b6113eb60a0830184611386565b979650505050505050565b600082825260208201905092915050565b7f4f776e65722063616e6e6f742072657175657374206c6f616e73000000000000600082015250565b600061143d601a836113f6565b915061144882611407565b602082019050919050565b6000602082019050818103600083015261146c81611430565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114ad82611038565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114e0576114df611473565b5b600182019050919050565b7f72617465206e6565647320746f20626520706f73697469766500000000000000600082015250565b60006115216019836113f6565b915061152c826114eb565b602082019050919050565b6000602082019050818103600083015261155081611514565b9050919050565b7f596f7572206164647265737320646964206e6f742074616b65206f757420746860008201527f6973206c6f616e00000000000000000000000000000000000000000000000000602082015250565b60006115b36027836113f6565b91506115be82611557565b604082019050919050565b600060208201905081810360008301526115e2816115a6565b9050919050565b7f596f752061726520747279696e6720746f20706179206d6f7265207468616e2060008201527f746865206f75747374616e64696e6720616d6f756e7400000000000000000000602082015250565b60006116456036836113f6565b9150611650826115e9565b604082019050919050565b6000602082019050818103600083015261167481611638565b9050919050565b600061168682611038565b915061169183611038565b9250828210156116a4576116a3611473565b5b828203905092915050565b600081519050919050565b60005b838110156116d85780820151818401526020810190506116bd565b838111156116e7576000848401525b50505050565b6000601f19601f8301169050919050565b6000611709826116af565b61171381856113f6565b93506117238185602086016116ba565b61172c816116ed565b840191505092915050565b6000604082019050818103600083015261175181856116fe565b9050611760602083018461112c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117a182611038565b91506117ac83611038565b9250826117bc576117bb611767565b5b828204905092915050565b60006117d282611038565b91506117dd83611038565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561181257611811611473565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207459d41e60250a57cd37bb4fc9c24bebbe1b12b659a38999bb5791e36c6ec99864736f6c63430008090033";

export class LoanContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LoanContract> {
    return super.deploy(overrides || {}) as Promise<LoanContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LoanContract {
    return super.attach(address) as LoanContract;
  }
  connect(signer: Signer): LoanContract__factory {
    return super.connect(signer) as LoanContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LoanContractInterface {
    return new utils.Interface(_abi) as LoanContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LoanContract {
    return new Contract(address, _abi, signerOrProvider) as LoanContract;
  }
}
